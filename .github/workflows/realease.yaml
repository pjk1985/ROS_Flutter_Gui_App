name: AutoRelease

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*'
jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Write URL
        run: |
          echo "upload_url=${{steps.create_release.outputs.upload_url}}" >> $GITHUB_OUTPUT
  build_on_mac:
    runs-on: macos-latest
    needs: create_release
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          channel: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - run: flutter pub get
      - run: flutter build web
      - run: flutter build apk
      - name: Package Release
        run: |
          tar -czvf web_release_package.tar.gz -C ./build/web/ .
          tar -czvf apk_release_package.tar.gz -C  ./build/app/outputs/flutter-apk/ .
          mv web_release_package.tar.gz $GITHUB_WORKSPACE/web_release_package.tar.gz
          mv apk_release_package.tar.gz $GITHUB_WORKSPACE/apk_release_package.tar.gz
      - name: Upload web Release Asset
        env:
          # upload_url: ${{needs.create_release.outputs.upload_url}}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        id: upload-web-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: ${{ github.workspace }}/web_release_package.tar.gz
          asset_name: ros_flutter_gui_app_web.tar.gz
          asset_content_type: application/gzip
      - name: Upload apk Release Asset
        env:
          # upload_url: ${{needs.create_release.outputs.upload_url}}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        id: upload-apk-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: ${{ github.workspace }}/apk_release_package.tar.gz
          asset_name: ros_flutter_gui_app_apk.tar.gz
          asset_content_type: application/gzip
  build_on_linux:
    runs-on: ubuntu-20.04
    needs: create_release
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - run: flutter build linux
      - name: Package Release
        run: |
          tar -czvf linux_release_package.tar.gz -C ./build/linux/x64/release/bundle/ .
      - name: Upload linux Release Asset
        env:
          # upload_url: ${{needs.create_release.outputs.upload_url}}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        id: upload-linux-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: ${{ github.workspace }}/linux_release_package.tar.gz
          asset_name: ros_flutter_gui_app_linux_x86_64.tar.gz
          asset_content_type: application/gzip
  build_on_windows:
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter build windows
      - run:
          $sourcePath = "${{ github.workspace }}/build/windows/x64/runner/Release/";
          $destinationPath = "${{ github.workspace }}/windows_release.zip";
          [System.IO.Compression.ZipFile]::CreateFromDirectory($sourcePath, $destinationPath)
      - name: Upload windows Release Asset
        env:
          # upload_url: ${{needs.create_release.outputs.upload_url}}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        id: upload-windows-release-asset 
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{needs.create_release.outputs.upload_url}}
          asset_path: ${{ github.workspace }}/windows_release.zip
          asset_name: ros_flutter_gui_app_windows_x86_64.zip
          asset_content_type: application/gzip
